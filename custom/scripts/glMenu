#!/usr/bin/env bash

# Configuration check for wofi
CONFIG_FILE="$HOME/.config/hypr/custom/scripts/iconMenu"
if [[ ! -f "$CONFIG_FILE" ]]; then
    echo "Erreur : Le fichier de configuration wofi n'existe pas : $CONFIG_FILE" >&2
    exit 1
fi

# Set the directory and application
SCRIPTS_DIR="$HOME/.config/hypr/custom/scripts/"
SHADERS_DIR="$HOME/.config/hypr/shaders/glsl"
APPLICATION="glpaper" # Replace with your choice of application

# Get the connected output ID dynamically instead of hardcoding 'HDMI-A-1'
OUTPUTID=$(xrandr --query | awk '/ connected/ { print $1 }' | grep -v disconnected | head -n 1)

# Check if OUTPUTID is empty or not
if [[ -z "$OUTPUTID" ]]; then
    echo "Erreur : Aucune sortie n'est connectée ou existe." >&2
    exit 1
fi

# Retrieve files from directory using a glob pattern instead of find
shopt -s nullglob
FILES=("$SHADERS_DIR"/*.glsl)

# Create the menu with wofi
RESULT=$(bash "$SCRIPTS_DIR/iconMenu" "$SHADERS_DIR" "${FILES[@]##*/}" | wofi --show dmenu --matching fuzzy)

# Exit if no element was selected
if [[ -z "$RESULT" ]]; then
    exit 1
fi

# Command or path to the script that generates output for wofi
FULLPATH="$SHADERS_DIR/$RESULT"

# Check if the file exists
if [[ ! -f "$FULLPATH" ]]; then
    snd-notify "Erreur : Le fichier '$FULLPATH' n'existe pas" >&2
    exit 1
fi

# Execute the application with arguments. Notify the user if there's an error.
if ! "$APPLICATION" "$OUTPUTID" "$FULLPATH"; then
    snd-notify "Erreur d'exécution : Le programme $APPLICATION a retourné une erreur" >&2
fi
