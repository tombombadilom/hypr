#!/usr/bin/env bash

# Wait time before checking for new windows
wait_time=5

# Define mappings from workspace number to expected window titles (as examples)
declare -A workspace_mappings=(
    [1]='foot'
    [2]='brave'
    [3]='evolution'
    [4]='AndroidMessages element-desktop whatsapp-for-linux telegram-desktop'
    [5]='code-oss brave'
    [6]='thunar QMPlay2'
    [7]='deluge'
)

# Function to get the X11 window ID of the last focused window
get_recent_window_id() {
    # In this example, we're using xdotool to get the active window ID
    echo $(xdotool getactivewindow 2>/dev/null)
}

# Function to move a window to a different workspace
move_window_to_workspace() {
    local window_id="$1"
    local destination_workspace="$2"
    
    hyprctl dispatch move-to-workspace "$window_id" "$destination_workspace"
}

# Loop over workspace mappings and launch applications
for workspace in "${!workspace_mappings[@]}"; do
    applications=${workspace_mappings[$workspace]}
    readarray -td' ' app_array <<<"$applications;"

    # Iterate through each application assigned to the current workspace
    for app_name in "${app_array[@]}"; do
        if [ -n "$app_name" ]; then
            # Launch the application
            $app_name &

            # Wait for the application to start
            sleep "$wait_time"

            # Get the window ID of the app that just started
            window_id=$(get_recent_window_id)

            # Move the window to its designated workspace
            if [ -n "$window_id" ]; then
                move_window_to_workspace "$window_id" "$workspace"
            fi
        fi
    done
done
