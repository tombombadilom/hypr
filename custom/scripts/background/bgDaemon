#!/usr/bin/env bash
# ~/.local/bin/glpaper/bgDaemon

# Check dependencies
if ! command -v glpaper &> /dev/null; then
    echo "The 'glpaper' program is not installed."
    exit 1
fi

# Répertoire contenant les fichiers GLSL
GLSL_DIR="$HOME/.config/hypr/shaders/glsl/"

# Ensure GLSL_DIR exists
if [ ! -d "$GLSL_DIR" ]; then
    echo "GLSL directory does not exist: $GLSL_DIR"
    exit 1
fi
sanitize_path() {
    echo "$1" | tr -s '/'
}
GLSL_FILES=($(ls "$(sanitize_path "$GLSL_DIR")"/*.glsl))
CURRENT_INDEX=0 # Index pour le fichier GLSL actuel
VIDEO_DEVICE_ID=$("$HOME"/.config/hypr/custom/scripts/videoid)

# Directory for PID file
PID_DIR="$HOME/.local/run/glpaper"
mkdir -p "$PID_DIR"

# Durée de rafraîchissement pour changer le GLSL
REFRESH_TIME=60  # par exemple, ajustez selon vos besoins

# Unique ID pour remplacer les notifications précédentes.
NOTIFY_ID="9999"

# Wrapper pour la commande notify-send avec des arguments prédéfinis
notify_send_wrapper() {
    local title="$1"
    local message="$2"
    if command -v notify-send &> /dev/null; then
        # Timeout de 10000 millisecondes (10 secondes) et marqueur transient pour remplacer les anciennes notifications.
        notify-send -t 10000 -u low -h int:transient:1 --replace="$NOTIFY_ID" "$title" "$message"
    else
        echo "$title: $message"
    fi
}

# Commande pour démarrer glpaper
# Commande pour démarrer glpaper
start_glpaper() {
    kill_refresh_loop  # Assurez-vous que la boucle existante est arrêtée avant de commencer

    notify_send_wrapper "Démarrage" "GLpaper est en cours de démarrage."

    # Start glpaper and capture the PID
    glpaper "$VIDEO_DEVICE_ID" "${GLSL_FILES[$CURRENT_INDEX]}" &
    GLPAPER_PID=$!
    echo "$GLPAPER_PID" > "$PID_DIR/glpaper.pid"

    # Background loop to update GLSL
    while true; do
        sleep "$REFRESH_TIME"
        next_glsl
    done &
    echo $! > "$PID_DIR/refresh.pid"  # Sauvegardez le PID de la boucle de rafraîchissement
}

# Tuer la boucle de rafraîchissement s'il existe
kill_refresh_loop() {
    if [ -f "$PID_DIR/refresh.pid" ]; then
        REFRESH_PID=$(<"$PID_DIR/refresh.pid")
        if kill -0 "$REFRESH_PID" 2>/dev/null; then
            kill "$REFRESH_PID"
            rm "$PID_DIR/refresh.pid"
            notify_send_wrapper "Arrêt" "La boucle de rafraîchissement GLpaper a été arrêtée."
        fi
    fi
}


# Passer au GLSL suivant
next_glsl() {
    kill_glpaper
    CURRENT_INDEX=$(( (CURRENT_INDEX+1) % ${#GLSL_FILES[@]} ))
    start_glpaper && notify_send_wrapper "Changement" "Passage au GLSL suivant."
}

# Passer au GLSL précédent
prev_glsl() {
    kill_glpaper
    CURRENT_INDEX=$(( (CURRENT_INDEX-1+${#GLSL_FILES[@]}) % ${#GLSL_FILES[@]} ))
    start_glpaper && notify_send_wrapper "Changement" "Retour au GLSL précédent."
}

# Votre script bgDaemon peut alors être utilisé comme suit:
case "$1" in
    start)
        start_glpaper
        ;;
    stop)
        kill_glpaper
        ;;
    next)
        next_glsl
        ;;
    prev)
        prev_glsl
        ;;
    *)
        # ne lance aucune séquence
        ;;
esac

exit 0
