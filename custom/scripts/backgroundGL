#!/bin/bash
# check if the daemon is installed and alive 
# Nom du service à vérifier
snd-notify() {
  local title="$1"
		local message="$2"
		local notify_type="$3" # New parameter for the type of notification
		local urgency="low"
		local timeout=10000
		local icon="" # Variable to store the path to the notification icon

		# Set icon and urgency based on the notification type
		case "$notify_type" in
				Alarm)
						icon="dialog-error" # Replace with actual path to your alarm icon if needed
						urgency="critical"
						;;
				Notice)
						icon="dialog-information" # Replace with actual path to notice icon if needed
						;;
				Success)
						icon="dialog-ok" # Replace with actual path to success icon if needed
						;;
				Error)
						icon="dialog-error" # Replace with actual path to error icon if needed
						urgency="critical"
						;;
				*)
						icon="dialog-information" # Default icon
						;;
		esac

		# Adjust settings when debugging
		if $DEBUG; then
				urgency="normal"   # Increase urgency when debugging
				timeout=20000      # Increase the time notifications are displayed when debugging
		fi

		if command -v notify-send &> /dev/null; then
				notify-send -t "$timeout" -u "$urgency" -i "$icon" -h int:transient:1 "$title" "$message"
		else
				echo "$title: $message"
		fi
}

SERVICE="bgDaemon"

# Vérifie si le service est installé
if systemctl list-unit-files | grep -qw "$SERVICE"; then
    #echo "Le service $SERVICE est installé."
    # Vérifie si le daemon du service tourne
    if systemctl is-active --quiet "$SERVICE"; then
        #echo "Le daemon de $SERVICE est en cours d'exécution."
    else
        snd-notify "Le daemon de $SERVICE n'est pas en cours d'exécution."
        # Commande pour démarrer le service si nécessaire ici
        sudo systemctl start $SERVICE
    fi
else
    snd-notify "Le service $SERVICE n'est pas installé."
    cd ~/.config/hypr/custom/scripts/background
    ./install
fi

# Chemin vers le script bgDaemon
BGDAEMON_PATH=~/.local/bin/glpaper/bgDaemon

# Fonction pour envoyer les commandes à bgDaemon
send_command_to_bgdaemon() {
  "$BGDAEMON_PATH" "$@"
}

# Vérifier les conditions et agir en conséquent
if ! pgrep glpaper > /dev/null; then
  # Aucun processus glpaper n'est actuellement en cours d'exécution,
  # donc on démarre un nouveau processus.
  if [[ -z "$1" ]]; then
    snd-notify 'Glpaper' 'Aucune sequence n''est en cours de lecture'
  else
    send_command_to_bgdaemon start
  fi
elif [[ -n "$1" ]]; then
  case "$1" in
    next)
      # Navigation vers le GLSL suivant
      send_command_to_bgdaemon next
      ;;
    prev)
      # Navigation vers le GLSL précédent
      send_command_to_bgdaemon prev
      ;;
    *)
      echo "Option invalide: $1"
      exit 1
      ;;
  esac
else
  # Un processus glpaper est en cours d'exécution et aucune navigation n'est demandée,
  # on arrête donc le processus et on termine backgroundGL.
  send_command_to_bgdaemon stop
  pkill -f backgroundGL
fi

exit 0

